{"version":3,"sources":["components/Card/card.component.jsx","components/CardList/card-list.component.jsx","components/SearchBox/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","Cardlist","monsters","map","Searchbox","placeholder","handleChange","type","onChange","App","state","searchfield","fetch","then","data","json","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAiBeA,MAff,SAAcC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,8BACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,OAGR,6BAAKL,EAAMG,QAAQG,OACnB,6BAAKN,EAAMG,QAAQI,Y,MCEVC,MAVf,SAAkBR,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GACnB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,U,MCMnBO,MAXf,YAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAChC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,KC8BDG,G,MAlCf,kDACE,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAEDiB,MAAQ,CACXR,SAAU,GACVS,YAAa,IALE,EADrB,qDAUE,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACC,GAAD,OAAU,EAAKE,SAAS,CAAEd,SAAUY,SAbhD,oBAgBE,WAAU,IAAD,OACP,EAAgCG,KAAKP,MAA/BR,EAAN,EAAMA,SAAUS,EAAhB,EAAgBA,YACZO,EAAmBhB,EAASiB,QAAO,SAACvB,GACtC,OAAOA,EAAQG,KAAKqB,cAAcC,SAASV,EAAYS,kBAEzD,OACE,sBAAK1B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEW,YAAY,wBACZC,aAAc,SAACgB,GAAD,OAAO,EAAKN,SAAS,CAAEL,YAAaW,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUtB,SAAUgB,WA5B5B,GAAyBO,cCOVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dea94ec0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <div>\r\n        <img\r\n          src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n          alt=\"\"\r\n        ></img>\r\n      </div>\r\n      <h2>{props.monster.name}</h2>\r\n      <h4>{props.monster.email}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../Card/card.component\";\r\nimport \"./card-list.styles.css\";\r\n\r\nfunction Cardlist(props) {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => {\r\n        return <Card key={monster.id} monster={monster}></Card>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cardlist;\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nfunction Searchbox({ placeholder, handleChange }) {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Searchbox;\r\n","import React, { Component } from \"react\";\nimport Cardlist from \"./components/CardList/card-list.component\";\nimport Searchbox from \"./components/SearchBox/search-box.component\";\nimport \"./App.css\";\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      monsters: [],\n      searchfield: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((data) => data.json())\n      .then((data) => this.setState({ monsters: data }));\n  }\n\n  render() {\n    let { monsters, searchfield } = this.state;\n    let filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    return (\n      <div className=\"App\">\n        <h1>MONSTER ROLODEX</h1>\n        <Searchbox\n          placeholder=\"enter name of monster\"\n          handleChange={(e) => this.setState({ searchfield: e.target.value })}\n        ></Searchbox>\n        <Cardlist monsters={filteredMonsters}></Cardlist>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}